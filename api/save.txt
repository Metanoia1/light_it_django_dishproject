class IngredientSerializer(serializers.Serializer):
    title = serializers.CharField(max_length=50)
    amount = serializers.PositiveSmallIntegerField()


class DishCreationSerializer(serializers.ModelSerializer):
    title = serializers.CharField(max_length=50, validators=[has_numbers])
    ingredients = IngredientSerializer(many=True)
    created_at = serializers.DateTimeField(format="iso-8601", read_only=True)

    class Meta:
        model = Dish
        fields = "__all__"


class DishCreateView(generics.GenericAPIView):
    queryset = Dish.objects.all()
    serializer_class = DishCreationSerializer
    permission_classes = [IsStaffUser]

    def post(self, request, *args, **kwargs):
        serializer = self.serializer_class(data=request.data)
        if serializer.is_valid():
            ingredients = [
                (get_object_or_404(Ingredient, title=i["title"]), i["amount"])
                for i in serializer.data["ingredients"]
            ]
            dish = Dish.objects.create(
                title=serializer.data["title"],
                description=serializer.data["description"],
            )
            DishIngredient.objects.bulk_create(
                DishIngredient(
                    dish=dish,
                    ingredient=ingredient[0],
                    amount=ingredient[1],
                )
                for ingredient in ingredients
            )
            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
